# https://yunohost.org/en/packaging_manifest
packaging_format = 2

id = "pyinventory"
name = "PyInventory"
description.en = "Web based management to catalog things including state and location etc."

version = "0.19.3~ynh2"

maintainers = ["Jens Diemer"]


[upstream]
# https://yunohost.org/en/packaging_manifest#upstream-section
license = "GPL-3.0-or-later"
code = "https://github.com/jedie/PyInventory/"



[integration]
# https://yunohost.org/en/packaging_manifest#integration-section
yunohost = ">=11.2.12"
helpers_version = "2.1"
architectures = "all"
multi_instance = true
ldap = true
sso = true
disk = "50M" # **estimate** minimum disk requirement. e.g. 20M, 400M, 1G, ...
ram.build = "50M" # **estimate** minimum ram requirement. e.g. 50M, 400M, 1G, ...
ram.runtime = "50M" # **estimate** minimum ram requirement. e.g. 50M, 400M, 1G, ...



[install]
# https://yunohost.org/en/packaging_manifest#install-questions

    [install.domain]
    # this is a generic question - ask strings are automatically handled by Yunohost's core
    type = "domain"

    [install.path]
    # this is a generic question - ask strings are automatically handled by Yunohost's core
    # setting $path and template variable __PATH__
    type = "path"
    default = "/pyinventory_ynh"

    [install.admin]
    # this is a generic question - ask strings are automatically handled by Yunohost's core
    type = "user"
    default = "admin"

    [install.init_main_permission]
    type = "group"
    default = "admins"

    [install.default_from_email] # __DEFAULT_FROM_EMAIL__
    ask.en = "Default email address to use for various automated emails."
    type = "email"
    example = "admin@example.com"

    [install.admin_email] # __ADMIN_EMAIL__
    ask.en = "EMail address for error emails."
    type = "email"
    example = "admin@example.com"

    [install.debug_enabled] # __DEBUG_ENABLED__ will be set to "0" or "1" string
    ask.en = "Should be never enabled in production!"
    type = "boolean"

    [install.log_level] # __LOG_LEVEL__
    ask.en = "Logging level"
    type = "select"
    choices = ["DEBUG", "INFO", "WARNING", "ERROR", "CRITICAL"]
    default = "WARNING"


[resources]
    [resources.system_user]
    # This will provision/deprovision a unix system user

    [resources.install_dir]
    group = "www-data:r-x"
    # https://yunohost.org/en/packaging_apps_resources#install-dir
    # This will create/remove the install dir as /var/www/$app/
    # and store the corresponding setting $install_dir and template variable __INSTALL_DIR__

    [resources.data_dir]
    # https://yunohost.org/en/packaging_apps_resources#data-dir
    # This will create/remove the data dir as /home/yunohost.app/$app/
    # and store the corresponding setting $data_dir and template variable __DATA_DIR__

    [resources.permissions]
    # https://yunohost.org/en/packaging_apps_resources#permissions
    # This will configure SSOwat permission for $domain/$path/
    # The initial allowed group of user is configured via the init_main_permission question (public=visitors, private=all_users)
    main.url = "/"

    [resources.ports]
    # https://yunohost.org/en/packaging_apps_resources#ports
    # This will pick a random port for reverse-proxying and store it as the $port setting

    [resources.apt]
    # https://yunohost.org/en/packaging_apps_resources#apt
    # This will automatically install/uninstall the following apt packages
    packages = "build-essential, python3-dev, python3-pip, python3-venv, git, libpq-dev, postgresql, postgresql-contrib, redis-server"

    [resources.database]
    # https://yunohost.org/en/packaging_apps_resources#database
    # This will automatically provision/deprovison a Postgres DB
    # and store the corresponding credentials in settings $db_user, $db_name, $db_pwd
    type = "postgresql"
